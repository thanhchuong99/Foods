import Backdrop from '@/components/Backdrop';
import { appEnv } from '@/configs/env';
import { AuthProvider } from '@/provider/AuthProvider';
import ConfigProvider from '@/provider/ConfigProvider';
import ReactQueryProviders from '@/provider/ReactQuery';
import theme from '@/provider/ThemeProvider';
import { marvinFont, nunitoFont, paytoneOneFont } from '@/util/fonts';
import { AppRouterCacheProvider } from '@mui/material-nextjs/v13-appRouter';
import { ThemeProvider } from '@mui/material/styles';
import type { Metadata } from 'next';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.min.css';
import './globals.css';
import parseUserFromCookies from '@/util/parse-user-from-cookies';
import { useMemo } from 'react';
import getAppInformation from 'next-data/appInformation';
import AppInformationProvider from '@/provider/AppInformationProvider';

export async function generateMetadata(): Promise<Metadata> {
  const { app_title, app_description, app_thumbnail }: IAppInformation = await getAppInformation();

  const DEFAULT_APP_TITLE = 'Wonderfoods';
  const DEFAULT_APP_DESCRIPTION = 'Generated by the Wonderfoods Team';

  return {
    metadataBase: new URL(appEnv.origin),
    title: {
      template: `%s | ${app_title || DEFAULT_APP_TITLE}`,
      default: `${app_title || DEFAULT_APP_TITLE}`,
    },
    description: `${app_description || DEFAULT_APP_DESCRIPTION}`,
    openGraph: {
      images: app_thumbnail ? [app_thumbnail] : ['/seo.png'],
    },
  };
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const user = useMemo(() => parseUserFromCookies(), []);
  const data = await getAppInformation();

  return (
    <html lang="en">
      <body
        className={`${marvinFont.variable} ${nunitoFont.variable} ${nunitoFont.className} ${paytoneOneFont.variable}`}
      >
        <ReactQueryProviders>
          <AppRouterCacheProvider>
            <ThemeProvider theme={theme}>
              <Backdrop.BlockUI />
              <AppInformationProvider value={data}>
                <AuthProvider initialUser={user}>
                  <ConfigProvider>{children}</ConfigProvider>
                  <ToastContainer />
                </AuthProvider>
              </AppInformationProvider>
            </ThemeProvider>
          </AppRouterCacheProvider>
        </ReactQueryProviders>
      </body>
    </html>
  );
}
